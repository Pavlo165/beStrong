trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - "*"

variables:
- group: terrafrom_var

stages:
  - stage: Plan
    displayName: "Terraform plan on PR"
    jobs:
      - job: PR_Plan
        displayName: "Terraform Plan on PR"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          # - task: AzureCLI@2
          #   inputs:
          #     azureSubscription: 'AzureARMPersonalAccount'
          #     scriptType: 'bash'
          #     addSpnToEnvironment: true
          #     useGlobalConfig: true
          #     scriptLocation: 'inlineScript'
          #     inlineScript: |
          #       az account show
          #   displayName: "Azure CLI Login"

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'AzureARMPersonalAccount'
              backendAzureRmResourceGroupName: 'beStrongTfState'
              backendAzureRmStorageAccountName: 'backendaccount304'
              backendAzureRmContainerName: 'tfstatebestrong'
              backendAzureRmKey: 'beststrong.tfstate'
            displayName: "Terraform Init"

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'validate'
            displayName: "Terraform Validate"

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'AzureARMPersonalAccount'
            displayName: "Terraform Plan"
            env:
              TF_VAR_login_for_sql: $(TF_VAR_login_for_sql)
              TF_VAR_password_for_sql: $(TF_VAR_password_for_sql)

  - stage: Apply
    displayName: "Apply Terraform Changes"
    dependsOn: Plan
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: ApplyTerraform
        displayName: "Approval for Apply"
        environment: "production"
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
                displayName: "Checkout repository"
              # - task: AzureCLI@2
              #   inputs:
              #     azureSubscription: 'AzureARMPersonalAccount'
              #     scriptType: 'bash'
              #     addSpnToEnvironment: true
              #     useGlobalConfig: true
              #     scriptLocation: 'inlineScript'
              #     inlineScript: |
              #       az account show
              #   displayName: "Azure CLI Login for Apply"

              - task: TerraformTaskV4@4
                inputs:
                  provider: 'azurerm'
                  command: 'init'
                  backendServiceArm: 'AzureARMPersonalAccount'
                  backendAzureRmResourceGroupName: 'beStrongTfState'
                  backendAzureRmStorageAccountName: 'backendaccount304'
                  backendAzureRmContainerName: 'tfstatebestrong'
                  backendAzureRmKey: 'beststrong.tfstate'
                displayName: "Terraform Init"

              - task: TerraformTaskV4@4
                inputs:
                  provider: 'azurerm'
                  command: 'apply'
                  environmentServiceNameAzureRM: 'AzureARMPersonalAccount'
                  commandOptions: '-auto-approve'
                displayName: "Terraform Apply"
                env:
                  TF_VAR_login_for_sql: $(TF_VAR_login_for_sql)
                  TF_VAR_password_for_sql: $(TF_VAR_password_for_sql)